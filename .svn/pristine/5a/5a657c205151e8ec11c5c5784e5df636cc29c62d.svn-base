package dev.procheck.offshore.stock.controllers;

import java.io.IOException;
import java.util.Date;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.json.simple.JSONObject;

import dev.procheck.offshore.stock.dao.impl.CartonDaoImpl;
import dev.procheck.offshore.stock.dao.impl.CartonHistoDaoImpl;
import dev.procheck.offshore.stock.models.CartonHisto;

@WebServlet("/ChangePositionCarton")
public class ChangePositionCartonController extends HttpServlet {
	private static final long serialVersionUID = 1L;

	/**
	 * @see HttpServlet#HttpServlet()
	 */
	public ChangePositionCartonController() {
		super();
		// TODO Auto-generated constructor stub
	}

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	@SuppressWarnings("unchecked")
	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		// TODO Auto-generated method stub
		JSONObject jo = new JSONObject();
		String code = request.getParameter("code");
		int statusC = Integer.parseInt(request.getParameter("status"));
		String codeArchivage = request.getParameter("code_archive");
		int statusCarton;
		CartonHisto histo = new CartonHisto();
		histo.setCartonNum(code);
		if (codeArchivage != null)
			histo.setCodeBarreArchivage(codeArchivage);
		histo.setLocale("23");
		histo.setUserLogin("Nabil Benzaira");
		Date date = new Date();
		histo.setDateHisto(date);
		histo.setStatus(statusC);
		if (code != null) {
			try {
				if (CartonDaoImpl.checkCarton(code)) {
					statusCarton = CartonDaoImpl.getStatus(code);
					if (statusC == 1) {
						switch (statusCarton) {
						case 1:
							jo.put("msg", "Le carton (" + code + ") est déja dans votre dépôt !");
							jo.put("status", false);
							break;
						case 99:
							jo.put("msg", "Le carton(" + code + ") est archivé !");
							jo.put("status", false);
							break;
						default:
							CartonDaoImpl.updateStatus(code, statusC, codeArchivage);
							CartonHistoDaoImpl.addHistoCarton(histo);
							jo.put("msg", "Le carton (" + code + ") est bien enregistré ");
							jo.put("status", true);
						}
					} else if (statusC == 2) {

						switch (statusCarton) {
												
						case 2:
							jo.put("msg", "Le carton(" + code + ") Déja envoyer !");
							jo.put("status", false);
							break;
						case 99:
							jo.put("msg", "Le carton(" + code + ") est archivé !");
							jo.put("status", false);
							break;
						default:
							CartonDaoImpl.updateStatus(code, statusC, codeArchivage);
							CartonHistoDaoImpl.addHistoCarton(histo);
							jo.put("msg", "Le carton(" + code + ") Bien envoyer !");
							jo.put("status", true);
						}

					} else if (statusC == 3) {

						switch (statusCarton) {
						case 3:
							jo.put("msg", "Le carton(" + code + ") Déja receptioner !");
							jo.put("status", false);
							break;
						case 99:
							jo.put("msg", "Le carton(" + code + ") est archivé !");
							jo.put("status", false);
							break;
						default:
							CartonDaoImpl.updateStatus(code, statusC, codeArchivage);
							CartonHistoDaoImpl.addHistoCarton(histo);
							jo.put("msg", "Le carton(" + code + ") bien receptioner ");
							jo.put("status", true);
						}

					} else if (statusC == 4) {
						
						switch (statusCarton) {
						case 4:
							jo.put("msg", "Le carton(" + code + ") Déja envoyer !");
							jo.put("status", false);
							break;
						case 99:
							jo.put("msg", "Le carton(" + code + ") est archivé !");
							jo.put("status", false);
							break;
						default:
							CartonDaoImpl.updateStatus(code, statusC, codeArchivage);
							CartonHistoDaoImpl.addHistoCarton(histo);
							jo.put("msg", "Le carton(" + code + ") Bien envoyer !");
							jo.put("status", true);
						}
					} else if (statusC == 5) {

						switch (statusCarton) {
						case 5:
							jo.put("msg", "La carton(" + code + ") Déja receptionner !");
							jo.put("status", false);
							break;
						case 99:
							jo.put("msg", "Le carton(" + code + ") est archivé !");
							jo.put("status", false);
							break;
						default:
							CartonDaoImpl.updateStatus(code, statusC, codeArchivage);
							CartonHistoDaoImpl.addHistoCarton(histo);
							jo.put("msg", "La carton(" + code + ") Bien receptioner !");
							jo.put("status", true);
						}
					} else if (statusC == 6) {

						switch (statusCarton) {
						case 6:
							jo.put("msg", "La carton(" + code + ") Déja envoyer !");
							jo.put("status", false);
							break;
						case 99:
							jo.put("msg", "Le carton(" + code + ") est archivé !");
							jo.put("status", false);
							break;
						default:
							CartonDaoImpl.updateStatus(code, statusC, codeArchivage);
							CartonHistoDaoImpl.addHistoCarton(histo);
							jo.put("msg", "La carton(" + code + ") Bien envoyer !");
							jo.put("status", true);
						}
					} else if (statusC == 99) {
						if (code == codeArchivage) {
							jo.put("msg", "Vous avez scanner le meme code barre !");
							jo.put("status", false);
						} else {
							switch (statusCarton) {
							case 99:
								jo.put("msg", "Le carton(" + code + ") Déja archivé !");
								jo.put("status", false);
								break;
							default:
								statusCarton = CartonDaoImpl.getStatus(code);
								CartonDaoImpl.updateStatus(code, statusC, codeArchivage);
								CartonHistoDaoImpl.addHistoCarton(histo);
								jo.put("msg", "La carton(" + code + ") Bien archiver !");
								jo.put("status", true);
							}
						}

					} else {
						jo.put("msg", "Le carton(" + code + ") Non trouvé !");
						jo.put("status", false);
					}
				}
			} catch (Exception ex) {
				jo.put("msg", ex.getMessage());
				jo.put("status", false);
			}
			response.setContentType("application/json");
			response.setCharacterEncoding("UTF-8");
			response.getWriter().write(jo.toString());
		}

	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}

}
